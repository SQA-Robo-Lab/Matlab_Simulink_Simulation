[comment encoding = UTF-8 /]
[module generate('http://www.muml.org/simulink/1.0.0', 'http://www.muml.org/simulink/stateflow/1.0.0')]


[template public generateComponents(aComponent : SimulinkLibrary)]


[comment @main/]
[if aComponent.name.contains('component')]
[for (sub:SubSystem|aComponent.subSystems)]
[file (sub.name.concat('.m'), false, 'UTF-8')]
modelname = '[sub.name/]'; 
open_system(new_system(modelname,"Subsystem"));
%Add Ports

[for(chart: simulink::ChartBlock |sub.allBlocks -> select (p|p.oclIsKindOf(simulink::ChartBlock)))]
%add Stateflowchart to Subsystem
load_system('[chart.name/]');
Simulink.BlockDiagram.copyContentsToSubsystem('[chart.name/]',modelname)
[/for]

%Add Inports
[for(portsin: InPortBlock |sub.allBlocks -> select (p|p.name.startsWith('IN_')))]
add_block('simulink/Sources/In1','[sub.name/]/[portsin.name/]');
[if(sub.allBlocks-> select (p|p.oclIsKindOf(simulink::ChartBlock))->notEmpty() and not(sub.id.startsWith('Structure_Component')))]
add_block('simulink/Sources/In1','[sub.name/]/Chart/[portsin.name/]');
add_line('[sub.name/]','[portsin.name/]/1','Chart/[sub.allBlocks->indexOf(portsin)-1/]');
[/if]
[/for]

[for(portsout: OutPortBlock |sub.allBlocks -> select (p|p.name.startsWith('OUT_')))]
%Add Outports
add_block('simulink/Ports & Subsystems/Out1','[sub.name/]/[portsout.name/]');
[if(sub.allBlocks-> select (p|p.oclIsKindOf(simulink::ChartBlock))->notEmpty() and not(sub.id.startsWith('Structure_Component')))]
add_block('simulink/Ports & Subsystems/Out1','[sub.name/]/Chart/[portsout.name/]');

add_line('[sub.name/]','Chart/[sub.allBlocks->indexOf(portsout)-1-(sub.allBlocks -> select (p|p.name.startsWith('IN_')))->size()/]','[portsout.name/]/1');
[/if]

[/for]
[for(portbus: PortBlock |sub.allBlocks -> select (p|p.name.startsWith('BUS_')))]
%Add IN/Out Bus
%Add Bus input for discrete ports
[let portCountIN : Integer = (sub.allBlocks -> select (p|p.name.startsWith('IN_')))->size()]
[let portCountOUT : Integer = (sub.allBlocks -> select (p|p.name.startsWith('OUT_')))->size()]
add_block('simulink/Ports & Subsystems/In Bus Element', ['['/]gcs '/InBus[sub.allBlocks->indexOf(portbus)-1-portCountIN/]']',...,
    'MakeNameUnique','on',..., 
    'PortName', "[portbus.name.replace('BUS_','')+'_recv'/]");

[if(sub.allBlocks -> select (p|p.oclIsKindOf(simulink::ChartBlock))->notEmpty() and not(sub.id.startsWith('Structure_Component')))]
add_block('simulink/Sources/In1','[sub.name/]/Chart/[portbus.name.replace('BUS_','')+'_recv'/]');
add_line('[sub.name/]','InBus[sub.allBlocks->indexOf(portbus)-1-portCountIN/]/1','Chart/[sub.allBlocks->indexOf(portbus)-1-portCountOUT/]');
[/if]


add_block('simulink/Ports & Subsystems/Out Bus Element', ['['/]gcs '/OutBus[sub.allBlocks->indexOf(portbus)-1-portCountOUT/]']',...,
    'MakeNameUnique','on',..., 
    'PortName', "[portbus.name.replace('BUS_','')+'_send'/]");

[if(sub.allBlocks -> select (p|p.oclIsKindOf(simulink::ChartBlock))->notEmpty() and not (sub.id.startsWith('Structure_Component')))]
add_block('simulink/Ports & Subsystems/Out1','[sub.name/]/Chart/[portbus.name.replace('BUS_','')+'_send'/]');
add_line('[sub.name/]','Chart/[sub.allBlocks->indexOf(portbus)-1-portCountIN/]','OutBus[sub.allBlocks->indexOf(portbus)-1-portCountOUT/]/1');
[/if]


[/let]
[/let]
[/for]

[for (subsy : SubSystem |sub.subSystems)]
%Add subb 
load_system('[subsy.id/]');
add_block('built-in/Subsystem', '[sub.name /]/[subsy.name/]');
Simulink.BlockDiagram.copyContentsToSubsystem('[subsy.id/]','[sub.name /]/[subsy.name/]');
[/for]

[for (subsy : SubSystem |sub.subSystems)]
[for(line : Line | subsy.lines)]
[if(line.sourcePort -> notEmpty()and line.targetPort ->notEmpty())]
[if(line.sourceBlock->notEmpty())]
add_line('[sub.name/]','[line.sourceBlock.name/]/[line.sourcePort.name/]/1','[subsy.name/]/[line.targetPort.name/]/1');
[/if]
[if(line.targetBlock->notEmpty())]
add_line('[sub.name/]','[subsy.name/]/[line.sourcePort.name/]/1','[line.targetBlock.name/]/[line.targetPort.name/]/1');
[/if]
[/if]
[/for]

[/for]


Simulink.BlockDiagram.arrangeSystem([sub.name/]);
save_system([sub.name/]);
close_system([sub.name/]);

[/file] 
[/for]
[/if]
[/template]


